<% number = 1 %>
<% @purchase_order.purchase_order_products.each do |pop| %>
  <% if pop.new_record? || action_name.eql?("edit") || (action_name.eql?("update") && !pop._destroy) %>
    <% if pop.errors and pop.errors.messages[:base] %>
      <span class='help-block'><%= pop.errors.messages[:base][0] %></span>
    <% end %>
    <table border="1" class="product-table table table-condensed table-responsive table-bordered" id="product_table_<%= pop.product_id %>" style="table-layout: fixed;width: 100%">
        <tr style="text-align: center">
            <td style="vertical-align: middle;width: 4% !important;"><strong>No.</strong></td>
            <td style="vertical-align: middle;width: 18% !important;"><strong>Product code</strong></td>
            <td style="vertical-align: middle;width: 18% !important;"><strong>Cost</strong></td>
            <td style="vertical-align: middle;width: auto !important;"><strong>Color X Size</strong></td>
        </tr>    
        <tr style="text-align: center">
            <td style="vertical-align: middle;width: 4% !important;">
                <%= number %>
            </td>
            <td style="vertical-align: middle;width: 18% !important;">
                <%= "#{pop.prdct_code} - #{pop.prdct_name}" %>
            </td>
            <td style="vertical-align: middle;width: 18% !important;" id="product_table_cost_<%= pop.product_id %>">
                <%= number_to_currency((pop.po_cost), :separator => ",", :delimiter => ".", :unit => "Rp", :precision => 2) %>
            </td>
            <td style="width: auto !important;">                
                <% pop_field_name = create_product_array_variable_name(pop, pop.product_id) %>
                <%= fields_for pop_field_name, pop do |pop_form| %>
                  <%= pop_form.hidden_field :po_cost %>
                  <%= pop_form.hidden_field :product_id %>
                  <%= pop_form.hidden_field :id unless pop_form.object.new_record? %>
                <% end %>

                <% sizes = @sizes[pop.product_id] %>
                <% index = 0 %>

                <script>
                  var colorSizes = [];
                </script>
                <div class="table-responsive">
                    <table border="1" class="table table-condensed table-responsive table-bordered">
                        <tr style="text-align: center">
                            <th colspan="2" rowspan="2"></th>
                            <td colspan="<%= sizes.length %>" align="center">
                                <%= text_field_tag "quantity_#{pop.product_id}", "", {placeholder: "qty", size: 16, class: "quantity form-control quantity-fields", style: "width: 50px !important"} %>
                              </td>
                          </tr>

                          <tr style="text-align: center">
                              <% sizes.each do |size| %>
                                <td align="center">
                                    <%= size.size %>
                                    <br />
                                    <%= text_field_tag "quantity_#{pop.product_id}_#{size.id}", "", {placeholder: "qty", class: "quantity-#{pop.product_id} quantity form-control quantity-fields", size: 16, style: "width: 50px !important"} %>
                                  </td>
                                <% end %>
                            </tr>

                            <% product_colors = @colors[pop.product_id] %>
                            <% product_colors.each_with_index do |color, idx| %>                          
                              <tr style="text-align: center">
                                  <td colspan="2" style="vertical-align: middle"><%= "#{color.code} - #{color.name}" %></td>                            
                                  <% sizes.each do |size| %>
                                    <% if idx == 0 %>
                                  <script>
                                    colorSizes.push('<%= size.id %>');
                                  </script>
                                <% end %>
                                <% pod = pop.purchase_order_details.select { |pod| pod.size_id.eql?(size.id) and pod.color_id.eql?(color.id) }.first %>
                                <% pod_field_name = create_product_detail_array_variable_name(pod, index, pop_field_name) %>
                                <td align="center" style="vertical-align: middle">
                                    <%= fields_for pod_field_name, pod do |pod_form| %>
                                      <%= pod_form.hidden_field :size_id %>
                                      <%= pod_form.hidden_field :color_id %>
                                      <%= pod_form.hidden_field :product_id, value: pop.product_id %>
                                      <%= pod_form.hidden_field :id unless pod_form.object.new_record? %>
                                      <div class="<%= control_group_error(pod, :quantity) %>">
                                          <%= pod_form.text_field :quantity, placeholder: "qty", class: "quantity-#{pop.product_id}-#{size.id} quantity-#{pop.product_id} quantity form-control quantity-fields quantity-fields-child quantity-fields-child-#{pop.product_id}", size: 16, style: "width: 50px !important" %>
                                            <%= error_help_text(pod, :quantity) %>
                                        </div>
                                      <% end %>

                                  </td>
                                  <% index += 1 %>
                                <% end %>
                                </tr>
                              <% end %>              
                          </table>
                      </div>
                  </td>
              </tr>              
              <script>
                $.each(colorSizes, function (index, value) {
                    $('#quantity_<%= pop.product_id %>_' + value).unbind();
                    $('#quantity_<%= pop.product_id %>_' + value).keyup(function () {
                        $('.quantity-<%= pop.product_id %>-' + value).val($('#quantity_<%= pop.product_id %>_' + value).val());
                        var totalQty = 0;
                        var totalGrossAmt = 0;
                        $(".quantity-fields-child").each(function () {
                            var qty = 0;
                            if ($(this).val().trim() == "")
                                qty = 0;
                            else
                                qty = parseInt($(this).val());
                            totalQty = totalQty + qty;
                            var productId = $(this).attr("class").split(" ")[1].split("-")[1];
                            var cost = $("#product_table_cost_" + productId).html().trim().replace(/\Rp/g, '').replace(/\./g, '').replace(/\,/g, '.');
                            var grossAmt = cost * qty;
                            totalGrossAmt = totalGrossAmt + grossAmt;
                        });
                        $("#purchase_order_attr_total_qty").val(totalQty);
                        $("#purchase_order_attr_total_qty_display").html(totalQty);
                        $("#purchase_order_attr_total_qty_display").toCurrency({
                            precision: 0, // decimal precision
                            delimiter: ".", // thousands delimiter
                            separator: "", // decimal separator
                            unit: "", // unit
                            format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                            negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                        });
                        $("#purchase_order_attr_total_gross_amt").val(totalGrossAmt);
                        $("#purchase_order_attr_total_gross_amt_display").html(totalGrossAmt);
                        $("#purchase_order_attr_total_gross_amt_display").toCurrency({
                            precision: 2, // decimal precision
                            delimiter: ".", // thousands delimiter
                            separator: ",", // decimal separator
                            unit: "Rp", // unit
                            format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                            negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                        });
                    });
                });
                $('#<%= "quantity_#{pop.product_id}" %>').unbind();
                $('#<%= "quantity_#{pop.product_id}" %>').keyup(function () {
                    $('.quantity-<%= pop.product_id %>').val($('#<%= "quantity_#{pop.product_id}" %>').val());
                    var totalQty = 0;
                    var totalGrossAmt = 0;
                    $(".quantity-fields-child").each(function () {
                        var qty = 0;
                        if ($(this).val().trim() == "")
                            qty = 0;
                        else
                            qty = parseInt($(this).val());
                        totalQty = totalQty + qty;
                        var productId = $(this).attr("class").split(" ")[1].split("-")[1];
                        var cost = $("#product_table_cost_" + productId).html().trim().replace(/\Rp/g, '').replace(/\./g, '').replace(/\,/g, '.');
                        var grossAmt = cost * qty;
                        totalGrossAmt = totalGrossAmt + grossAmt;
                    });
                    $("#purchase_order_attr_total_qty").val(totalQty);
                    $("#purchase_order_attr_total_qty_display").html(totalQty);
                    $("#purchase_order_attr_total_qty_display").toCurrency({
                        precision: 0, // decimal precision
                        delimiter: ".", // thousands delimiter
                        separator: "", // decimal separator
                        unit: "", // unit
                        format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                        negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                    });
                    $("#purchase_order_attr_total_gross_amt").val(totalGrossAmt);
                    $("#purchase_order_attr_total_gross_amt_display").html(totalGrossAmt);
                    $("#purchase_order_attr_total_gross_amt_display").toCurrency({
                        precision: 2, // decimal precision
                        delimiter: ".", // thousands delimiter
                        separator: ",", // decimal separator
                        unit: "Rp", // unit
                        format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                        negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                    });
                });
                $(".quantity-fields-child-<%= pop.product_id %>").unbind();
                $(".quantity-fields-child-<%= pop.product_id %>").keyup(function () {
                    var totalQty = 0;
                    var totalGrossAmt = 0;
                    $(".quantity-fields-child").each(function () {
                        var qty = 0;
                        if ($(this).val().trim() == "")
                            qty = 0;
                        else
                            qty = parseInt($(this).val());
                        totalQty = totalQty + qty;
                        var productId = $(this).attr("class").split(" ")[1].split("-")[1];
                        var cost = $("#product_table_cost_" + productId).html().trim().replace(/\Rp/g, '').replace(/\./g, '').replace(/\,/g, '.');
                        var grossAmt = cost * qty;
                        totalGrossAmt = totalGrossAmt + grossAmt;
                    });
                    $("#purchase_order_attr_total_qty").val(totalQty);
                    $("#purchase_order_attr_total_qty_display").html(totalQty);
                    $("#purchase_order_attr_total_qty_display").toCurrency({
                        precision: 0, // decimal precision
                        delimiter: ".", // thousands delimiter
                        separator: "", // decimal separator
                        unit: "", // unit
                        format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                        negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                    });
                    $("#purchase_order_attr_total_gross_amt").val(totalGrossAmt);
                    $("#purchase_order_attr_total_gross_amt_display").html(totalGrossAmt);
                    $("#purchase_order_attr_total_gross_amt_display").toCurrency({
                        precision: 2, // decimal precision
                        delimiter: ".", // thousands delimiter
                        separator: ",", // decimal separator
                        unit: "Rp", // unit
                        format: "%u%n", // format. %u is the placeholder for the unit, %n for the number
                        negativeFormat: false   // format for negative numbers. If false, it defaults to the same format as positive numbers
                    });
                });

              </script>
          </table>
          <% number += 1 %>
        <% else %>
          <% pop_field_name = create_product_array_variable_name(pop, pop.product_id) %>
          <%= fields_for pop_field_name, pop do |pop_form| %>
            <%= pop_form.hidden_field :_destroy, value: true %>
            <%= pop_form.hidden_field :id %>
          <% end %>
        <% end %>
      <% end %>

      <script>
        $(".quantity").numeric({
            decimal: false,
            negative: false
        }, function () {
            alert("Positive integers only");
            this.value = "";
            this.focus();
        });
      <% if @purchase_order.attr_total_qty.blank? %>
          $("#purchase_order_attr_total_qty").val("");
          $("#purchase_order_attr_total_qty_display").html("");
          $("#purchase_order_attr_total_gross_amt").val("");
          $("#purchase_order_attr_total_gross_amt_display").html("");
      <% end %>
      </script>

